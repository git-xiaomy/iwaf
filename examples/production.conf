# Example configuration for high-traffic websites

# In your nginx.conf, increase these values:
worker_processes auto;
worker_connections 2048;

# Increase shared memory for WAF
lua_shared_dict iwaf_cache 50m;

# Example server block for production
server {
    listen 80;
    server_name example.com www.example.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com www.example.com;
    
    # SSL configuration
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # iWAF protection
    access_by_lua_block {
        local iwaf = require "waf"
        iwaf.check_request()
    }
    
    lua_need_request_body on;
    client_max_body_size 20m;
    
    # Website root
    root /var/www/example.com;
    index index.html index.php;
    
    # PHP processing (if needed)
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    
    # Static files optimization
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Skip WAF for static files
        access_by_lua_block {
            -- Skip WAF checks for static files
        }
    }
    
    # iWAF Management (restrict access)
    location /iwaf/ {
        alias /etc/nginx/iwaf/web/;
        index index.html;
        
        # Restrict to admin IPs only
        allow 192.168.1.0/24;
        allow 10.0.0.0/8;
        deny all;
        
        access_by_lua_block {
            -- Skip WAF checks
        }
    }
    
    # Main location
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Custom error pages
    error_page 403 /blocked.html;
    location = /blocked.html {
        root /etc/nginx/iwaf/web;
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/example.com_access.log combined;
    error_log /var/log/nginx/example.com_error.log warn;
}